#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
// #include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
// #include <behaviors/mouse_keys.dtsi>
// #include <dt-bindings/zmk/ext_power.h>
#include "behaviors.dtsi"

/ {
// ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    00     01     02     03     04     05        06     07     08     09     10     11
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    12     13     14     15     16     17        18     19     20     21     22     23
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    24     25     26     27     28     29        30     31     32     33     34     35
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    36     37     38     39     40     41        42     43     44     45     46     47
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    48     49     50     51     52     53        54     55     56     57     58     59
// ╰──────┴──────┴──────┴──────┴──────┴──────╯  ╰──────┴──────┴──────┴──────┴──────┴──────╯

    keymap {
        compatible = "zmk,keymap";
        BASE {
            bindings = <
&kp ESCAPE  &kp N1     &kp N2     &kp N3     &kp N4     &kp N5          &kp N6       &kp N7     &kp N8     &kp N9          &kp N0        &kp GRAVE
&kp TAB     &kp Q      &kp W      &kp E      &kp R      &kp T           &kp Y        &kp U      &kp I      &kp O           &kp P         &kp BACKSPACE
&mo 3       &kp A      &kp S      &kp D      &kp F      &kp G           &kp H        &kp J      &kp K      &kp L           &kp SEMI      &kp ENTER
&kp LSHFT   &kp Z      &kp X      &kp C      &kp V      &kp B           &kp N        &kp M      &kp COMMA  &kp DOT         &kp UP_ARROW  &kp RSHFT
&mo 2       &kp LCTRL  &kp LMETA  &kp LALT   &kp SPACE  &lt 1 SPACE     &lt 1 SPACE  &kp SPACE  &kp SLASH  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT
            >;
        };

        DEV {
            bindings = <
&kp F1  &kp F2         &kp F3  &kp F4            &kp F5        &kp F6      &kp F7             &kp F8                &kp F9                 &kp F10  &kp F11        &kp F12
&none   &kp BACKSPACE  &trans  &kp HASH          &kp MINUS     &trans      &trans             &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans   &kp BACKSLASH  &trans
&none   &trans         &trans  &kp SINGLE_QUOTE  &kp EQUAL     &kp EXCL    &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans   &trans         &trans
&trans  &trans         &trans  &kp PLUS          &kp QUESTION  &kp STAR    &kp UNDERSCORE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans   &trans         &trans
&tog 2  &trans         &trans  &trans            &trans        &trans      &trans             &trans                &trans                 &trans   &trans         &trans
            >;
        };

        SYM {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4       &kp TAB          &kp KP_N7        &kp KP_N8  &kp KP_N9   &kp KP_NUMLOCK  &none
&none           &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_MUTE    &kp C_VOLUME_UP    &kp KP_SUBTRACT  &kp KP_N4        &kp KP_N5  &kp KP_N6   &kp BACKSPACE   &trans
&none           &none                 &none                 &none              &none         &none              &kp KP_PLUS      &kp KP_N1        &kp KP_N2  &kp KP_N3   &kp KP_ENTER    &trans
&studio_unlock  &kp C_PREV            &kp C_PLAY_PAUSE      &kp C_NEXT         &none         &none              &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_N0  &kp KP_DOT  &trans          &trans
&trans          &trans                &trans                &trans             &trans        &trans             &trans           &trans           &trans     &trans      &trans          &trans
            >;
        };

        ARW {
            bindings = <
&trans        &trans     &trans         &trans     &trans     &trans    &trans  &trans          &trans          &trans              &trans         &trans
&kp CAPSLOCK  &trans     &trans         &trans     &trans     &trans    &trans  &kp UP_ARROW    &kp DOWN        &trans              &trans         &trans
&trans        &trans     &trans         &trans     &trans     &trans    &trans  &kp LEFT        &kp RIGHT       &kp LG(LEFT_ARROW)  &kp LG(RIGHT)  &trans
&trans        &trans     &trans         &trans     &trans     &trans    &trans  &trans          &trans          &trans              &trans         &trans
&trans        &trans     &trans         &trans     &trans     &trans    &trans  &trans          &trans          &trans              &trans         &trans
            >;
        };
    };
};