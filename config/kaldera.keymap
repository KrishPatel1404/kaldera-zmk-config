#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 18 30 42 54 66 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 43 44 45 46 47 55 56 57 58 59 67 68 69 71 70>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50 51 52 53 60 61 62 63 64 65 3>;
        };

        thumb: thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <225>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <90>;
            flavor = "balanced";
        };

        pinky: pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "PINKY";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <225>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <50>;
            flavor = "hold-preferred";
        };

        extra: extra {
            compatible = "zmk,behavior-hold-tap";
            label = "EXTRA";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <225>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <200>;
            flavor = "hold-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        Testing {
            bindings = <&pinky 3 LALT>;
            key-positions = <31 32 33 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEF {
            bindings = <
&kp GRAVE        &kp N1     &kp N2        &kp N3       &kp N4       &kp N5            &kp N6          &kp N7       &kp N8       &kp N9        &kp N0                 &extra 4 PRINTSCREEN
&kp TAB          &kp Q      &kp W         &kp E        &kp R        &kp T             &kp Y           &kp U        &kp I        &kp O         &kp P                  &kp BACKSPACE
&pinky 3 ESCAPE  &kp A      &hml LCTRL S  &hml LGUI D  &hml LALT F  &kp G             &kp H           &hmr RALT J  &hmr RGUI K  &hmr RCTRL L  &hmr RSHIFT SEMICOLON  &kp ENTER
&kp LSHFT        &kp Z      &kp X         &kp C        &kp V        &kp B             &kp N           &kp M        &kp COMMA    &kp DOT       &kp UP_ARROW           &kp DOWN
&mo 2            &kp LCTRL  &kp LMETA     &kp LALT     &kp SPACE    &thumb 1 SPACE    &thumb 1 SPACE  &kp SPACE    &kp RALT     &kp RGUI      &kp LEFT_ARROW         &kp RIGHT
            >;
        };

        UPR {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4         &kp F5        &kp F6       &kp F7             &kp F8                &kp F9                 &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &kp PLUS       &kp SLASH     &trans       &trans             &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans   &trans   &trans
&trans  &trans  &trans  &kp EQUAL      &kp MINUS     &kp UNDER    &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans   &trans   &trans
&trans  &trans  &trans  &kp AMPERSAND  &kp QUESTION  &kp ASTRK    &kp SINGLE_QUOTE   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans   &trans   &trans
&trans  &trans  &trans  &trans         &trans        &trans       &trans             &trans                &trans                 &trans   &trans   &trans
            >;
        };

        LWR {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2    &none       &studio_unlock     &bt BT_CLR         &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans            &trans          &trans      &trans             &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans            &trans          &trans      &trans             &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans            &trans          &trans      &trans             &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        DEV {
            bindings = <
&kp CAPSLOCK  &trans  &trans     &trans     &trans      &trans    &trans    &trans    &trans  &trans     &trans      &trans
&trans        &trans  &kp LA(C)  &kp LA(V)  &kp DELETE  &trans    &trans    &trans    &trans  &trans     &trans      &trans
&trans        &trans  &kp LCTRL  &kp LGUI   &kp LALT    &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp RSHIFT  &trans
&trans        &trans  &trans     &trans     &trans      &trans    &trans    &trans    &trans  &trans     &trans      &trans
&trans        &trans  &trans     &trans     &trans      &trans    &trans    &trans    &trans  &trans     &trans      &trans
            >;
        };

        EXT {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    }; // End of keymap
}; // End of file
